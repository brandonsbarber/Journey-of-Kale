#############################################################################
# Makefile for building: game_bsbarber
# Generated by qmake (2.01a) (Qt 4.8.1) on: Tue Apr 30 12:23:48 2013
# Project:  game_bsbarber.pro
# Template: app
# Command: /usr/bin/qmake -o Makefile game_bsbarber.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DQT_WEBKIT -DQT_NO_DEBUG -DQT_GUI_LIB -DQT_CORE_LIB -DQT_SHARED
CFLAGS        = -pipe -O2 -Wall -W -D_REENTRANT $(DEFINES)
CXXFLAGS      = -pipe -O2 -Wall -W -D_REENTRANT $(DEFINES)
INCPATH       = -I/usr/share/qt4/mkspecs/linux-g++ -I. -I/usr/include/qt4/QtCore -I/usr/include/qt4/QtGui -I/usr/include/qt4 -I. -I.
LINK          = g++
LFLAGS        = -Wl,-O1
LIBS          = $(SUBLIBS)  -L/usr/lib/i386-linux-gnu -lQtGui -lQtCore -lpthread 
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/bin/qmake
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
STRIP         = strip
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = chaser.cpp \
		climber.cpp \
		gamescene.cpp \
		kale.cpp \
		knight.cpp \
		main.cpp \
		mainwindow.cpp \
		menuscene.cpp \
		tile.cpp \
		volcur.cpp moc_gamescene.cpp \
		moc_mainwindow.cpp \
		moc_menuscene.cpp
OBJECTS       = chaser.o \
		climber.o \
		gamescene.o \
		kale.o \
		knight.o \
		main.o \
		mainwindow.o \
		menuscene.o \
		tile.o \
		volcur.o \
		moc_gamescene.o \
		moc_mainwindow.o \
		moc_menuscene.o
DIST          = /usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/common/gcc-base.conf \
		/usr/share/qt4/mkspecs/common/gcc-base-unix.conf \
		/usr/share/qt4/mkspecs/common/g++-base.conf \
		/usr/share/qt4/mkspecs/common/g++-unix.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/modules/qt_webkit_version.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		game_bsbarber.pro
QMAKE_TARGET  = game_bsbarber
DESTDIR       = 
TARGET        = game_bsbarber

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile $(TARGET)

$(TARGET):  $(OBJECTS)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)

Makefile: game_bsbarber.pro  /usr/share/qt4/mkspecs/linux-g++/qmake.conf /usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/common/gcc-base.conf \
		/usr/share/qt4/mkspecs/common/gcc-base-unix.conf \
		/usr/share/qt4/mkspecs/common/g++-base.conf \
		/usr/share/qt4/mkspecs/common/g++-unix.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/modules/qt_webkit_version.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		/usr/lib/i386-linux-gnu/libQtGui.prl \
		/usr/lib/i386-linux-gnu/libQtCore.prl
	$(QMAKE) -o Makefile game_bsbarber.pro
/usr/share/qt4/mkspecs/common/unix.conf:
/usr/share/qt4/mkspecs/common/linux.conf:
/usr/share/qt4/mkspecs/common/gcc-base.conf:
/usr/share/qt4/mkspecs/common/gcc-base-unix.conf:
/usr/share/qt4/mkspecs/common/g++-base.conf:
/usr/share/qt4/mkspecs/common/g++-unix.conf:
/usr/share/qt4/mkspecs/qconfig.pri:
/usr/share/qt4/mkspecs/modules/qt_webkit_version.pri:
/usr/share/qt4/mkspecs/features/qt_functions.prf:
/usr/share/qt4/mkspecs/features/qt_config.prf:
/usr/share/qt4/mkspecs/features/exclusive_builds.prf:
/usr/share/qt4/mkspecs/features/default_pre.prf:
/usr/share/qt4/mkspecs/features/release.prf:
/usr/share/qt4/mkspecs/features/default_post.prf:
/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf:
/usr/share/qt4/mkspecs/features/warn_on.prf:
/usr/share/qt4/mkspecs/features/qt.prf:
/usr/share/qt4/mkspecs/features/unix/thread.prf:
/usr/share/qt4/mkspecs/features/moc.prf:
/usr/share/qt4/mkspecs/features/resources.prf:
/usr/share/qt4/mkspecs/features/uic.prf:
/usr/share/qt4/mkspecs/features/yacc.prf:
/usr/share/qt4/mkspecs/features/lex.prf:
/usr/share/qt4/mkspecs/features/include_source_dir.prf:
/usr/lib/i386-linux-gnu/libQtGui.prl:
/usr/lib/i386-linux-gnu/libQtCore.prl:
qmake:  FORCE
	@$(QMAKE) -o Makefile game_bsbarber.pro

dist: 
	@$(CHK_DIR_EXISTS) .tmp/game_bsbarber1.0.0 || $(MKDIR) .tmp/game_bsbarber1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) .tmp/game_bsbarber1.0.0/ && $(COPY_FILE) --parents chaser.h climber.h gamescene.h hpath.h kale.h knight.h mainwindow.h menuscene.h thing.h tile.h volcur.h vpath.h .tmp/game_bsbarber1.0.0/ && $(COPY_FILE) --parents chaser.cpp climber.cpp gamescene.cpp kale.cpp knight.cpp main.cpp mainwindow.cpp menuscene.cpp tile.cpp volcur.cpp .tmp/game_bsbarber1.0.0/ && (cd `dirname .tmp/game_bsbarber1.0.0` && $(TAR) game_bsbarber1.0.0.tar game_bsbarber1.0.0 && $(COMPRESS) game_bsbarber1.0.0.tar) && $(MOVE) `dirname .tmp/game_bsbarber1.0.0`/game_bsbarber1.0.0.tar.gz . && $(DEL_FILE) -r .tmp/game_bsbarber1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile


check: first

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: moc_gamescene.cpp moc_mainwindow.cpp moc_menuscene.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) moc_gamescene.cpp moc_mainwindow.cpp moc_menuscene.cpp
moc_gamescene.cpp: thing.h \
		tile.h \
		kale.h \
		chaser.h \
		knight.h \
		gamescene.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) gamescene.h -o moc_gamescene.cpp

moc_mainwindow.cpp: gamescene.h \
		thing.h \
		tile.h \
		kale.h \
		chaser.h \
		knight.h \
		menuscene.h \
		mainwindow.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) mainwindow.h -o moc_mainwindow.cpp

moc_menuscene.cpp: menuscene.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) menuscene.h -o moc_menuscene.cpp

compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all:
compiler_uic_clean:
compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean 

####### Compile

chaser.o: chaser.cpp chaser.h \
		thing.h \
		kale.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o chaser.o chaser.cpp

climber.o: climber.cpp climber.h \
		thing.h \
		vpath.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o climber.o climber.cpp

gamescene.o: gamescene.cpp gamescene.h \
		thing.h \
		tile.h \
		kale.h \
		chaser.h \
		knight.h \
		volcur.h \
		hpath.h \
		vpath.h \
		climber.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o gamescene.o gamescene.cpp

kale.o: kale.cpp kale.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o kale.o kale.cpp

knight.o: knight.cpp knight.h \
		thing.h \
		kale.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o knight.o knight.cpp

main.o: main.cpp mainwindow.h \
		gamescene.h \
		thing.h \
		tile.h \
		kale.h \
		chaser.h \
		knight.h \
		menuscene.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o main.o main.cpp

mainwindow.o: mainwindow.cpp mainwindow.h \
		gamescene.h \
		thing.h \
		tile.h \
		kale.h \
		chaser.h \
		knight.h \
		menuscene.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o mainwindow.o mainwindow.cpp

menuscene.o: menuscene.cpp menuscene.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o menuscene.o menuscene.cpp

tile.o: tile.cpp tile.h \
		thing.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o tile.o tile.cpp

volcur.o: volcur.cpp volcur.h \
		thing.h \
		hpath.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o volcur.o volcur.cpp

moc_gamescene.o: moc_gamescene.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_gamescene.o moc_gamescene.cpp

moc_mainwindow.o: moc_mainwindow.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_mainwindow.o moc_mainwindow.cpp

moc_menuscene.o: moc_menuscene.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_menuscene.o moc_menuscene.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

